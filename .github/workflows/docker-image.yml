name: Docker Image CI

on:
  push:
    branches: [ "prod", "dev" ]
  pull_request:
    # types: [closed]
    branches: [ "prod", "dev" ]

jobs:
    build:
        env:
          DOCKER_REPO: ${{ github.event.pull_request.base.ref || (github.ref == 'refs/heads/dev' && 'dev') || (github.ref == 'refs/heads/prod' && 'prod') }}
        runs-on: ubuntu-latest
        if: github.event.pull_request.merged == true || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/prod'
        permissions:
            id-token: write
            contents: read
          
        steps:
          - uses: actions/checkout@v3
          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
            with:
                role-to-assume: arn:aws:iam::233276167072:role/rest-api-gh-role
                aws-region: eu-central-1
                role-session-name: ci-session-${{ github.event.repository.name }}


          - name: Get current branch
            run: echo ${{ env.DOCKER_REPO }}

          - name: Build the Docker image
            run: |
              cd flask-app
              docker build -t flask-app-${{  env.DOCKER_REPO }}-gh:latest .

          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1

          - name: push the Docker image
            run: |
              docker tag flask-app-${{  env.DOCKER_REPO }}-gh:latest 233276167072.dkr.ecr.eu-central-1.amazonaws.com/tf-training-${{  env.DOCKER_REPO }}-ecr-python:0.0.2-SNAPSHOT
              docker push  233276167072.dkr.ecr.eu-central-1.amazonaws.com/tf-training-${{  env.DOCKER_REPO }}-ecr-python:0.0.2-SNAPSHOT

